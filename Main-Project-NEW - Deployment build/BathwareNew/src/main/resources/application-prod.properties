spring.application.name=user-profile-backend

# PostgreSQL - Using environment variables for Render deployment
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bathware}
spring.datasource.username=${DB_USERNAME:springuser}
spring.datasource.password=${DB_PASSWORD:springpass}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Server port
server.port=8080

# Logs
logging.level.root=INFO
logging.file.name=logs/spring.log

# Email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:anudaranasinghe2@gmail.com}
spring.mail.password=${EMAIL_PASSWORD:tjhu wgfc sbvq mndm}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.jackson.serialization.fail-on-empty-beans=false

# Multipart file upload configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# File upload directories (production - using environment variables)
# Product images directory - in production this should be in uploads
product.images.dir=${PRODUCT_IMAGES_DIR:/app/uploads/images}
# Payment slips uploads directory - main uploads directory
uploads.dir=${UPLOADS_DIR:/app/uploads/bills}

# CORS Configuration for production
cors.allowed.origins=${CORS_ORIGINS:https://your-frontend-url.netlify.app}

